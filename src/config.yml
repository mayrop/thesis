# For Penalized logistic regression: # alpha = 1 -> lasso, 0 -> ridge

default:
  seed: 2019
  settings:
    data_folder: "data"
    load_fonts: 1
    libraries: !expr c(
        "ggplot2", "GGally", "gridExtra", "dplyr", 
        "moderndive", "skimr", "plotly", "tidyr", "magrittr", 
        "tidyverse", "reshape2", "corrplot", "caret", "ellipse", "car", "rcompanion", 
        "e1071", "pROC", "glmnet", 
        "tibble",
        "dendextend", 
        "urbnmapr", "sf", "cowplot",  
        "extrafont",
        "digest",
        "stringi"
      )
    sources: !expr c(
        "http://www.sthda.com/upload/rquery_cormat.r"
      )
  predictors:
    correlation: 0.23
    use_all_for_correlations: 1 # TODO - Get better naming convention
    transformations: !expr list(
        "pop_14" = "log(pop_14)",
        "pop_10" = "log(pop_10)",
        "pop_density_10" = "log(pop_density_10)",
        "age_o65_pct_14" = "log(age_o65_pct_14)",
        "age_u5_pct_14" = "log(age_u5_pct_14)",
        "age_u18_pct_14" = "log(age_u18_pct_14)"
      )
    valid_suffixes: !expr c(
        "_13$", 
        "_14$"
      )
  theme:
    font_family: "Arial"
    font_color: "#4e4d47"
    bg_color: "#f5f5f2"
    border_color: "#e8e8e5"
  maps:
    colors: !expr data.frame(
        "democrat_low" = "#C0CCDD",
        "democrat_med_low" = "#a9bbd3",
        "democrat_med" = "#819ABB",
        "democrat_med_high" = "#26659b",
        "democrat_high" = "#0e4375",
        "republican_low" = "#ddbdbd",
        "republican_med_low" = "#db8f7f",
        "republican_med" = "#cf6a55",
        "republican_med_high" = "#c95d47",  
        "republican_high" = "#c32b0d"
      )
    mapping: !expr list(
        "population" = "pop_14_level",
        "education" = "edu_bachelor_pct_13_level",
        "race_white" = "race_white_no_hisp_pct_14_level",
        "housing_units" = "housing_units_in_multiunit_13_level"
      )    
  models: !expr list(
      "glm" = list(
        name="Logistic Regression",
        preProc=c()    
      ),
      "glm_ltr" = list(
        name="LR Backward Elimination (LTR)",
        method="glm",
        preProc=c()
      ),
      "glm_aic" = list(
        method="glmStepAIC",
        name="LR Backward Elimination (AIC)"
      ),
      "glm_bic" = list(
        method="glmStepAIC",
        name="LR Backward Elimination (BIC)"
      ),
      "glmnet" = list(
        name="Penalized Logistic Regression",
        tuneGrid=expand.grid(
          alpha=seq(0.05, 0.95, by=0.05),
          lambda=seq(0.001, 0.01, by=0.001)
        ), 
        optimizeGrid="glmnet"
      ),
      "rf" = list(
        name="Random Forest",
        tuneGrid=expand.grid(.mtry=c(1:10)),
        params=list(
          ntree=100,
          importance=TRUE
        ),
        optimizeGrid="rf"
      ),
      "svmLinear"=list(
        name="SVM with Linear Kernel"
      ),
      "svmPoly"=list(
        name="SVM with Polynomial Kernel"
      ),
      "svmRadial"=list(
        name="Radial Basis Function Kernel"
      )
    )

